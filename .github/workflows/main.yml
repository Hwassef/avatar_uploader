# name: Flutter CI

# # This workflow is triggered on pushes to the repository.
# on:
#   push:
#     branches:
#       - main

# # on: push    # Default will running for every branch.

# jobs:
#   build:
#     # This job will run on ubuntu virtual machine
#     runs-on: ubuntu-latest
#     steps:

#       # Setup Java environment in order to build the Android app.
#       - uses: actions/checkout@v1
#       - uses: actions/setup-java@v1
#         with:
#           java-version: '12.x'

#       # Setup the flutter environment.
#       - uses: subosito/flutter-action@v1
#         with:
#           channel: 'beta' # 'dev', 'alpha', default to: 'stable'
#           # flutter-version: '1.12.x' # you can also specify exact version of flutter

#       # Get flutter dependencies.
#       - run: flutter pub get

#       # Build apk.
#       - run: flutter build apk

#       # Upload generated apk to the artifacts.
#       - uses: actions/upload-artifact@v1
#         with:
#           name: release-apk
#           path: build/app/outputs/apk/release/app-release.apk

#       # Push to Releases
#       - name: Push to Releases
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: "build/app/outputs/apk/release/*,build/ios/iphoneos/app.ipa"
#           tag: v1.0.${{ github.run_number }}
#           token: ${{ secrets.KEY }}

# name: Android CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3
#       - name: set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           cache: gradle

#       - name: Grant execute permission for gradlew
#         run: chmod +x gradlew
#       - name: build release
#         run: ./gradlew assembleDebug
#       - name: upload artifact to Firebase App Distribution
#         uses: wzieba/Firebase-Distribution-Github-Action@v1.5.1
#         with:
#           appId: ${{secrets.FIREBASE_APP_ID}}
#           #token: ${{secrets.FIREBASE_TOKEN}}   
#           serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}      
#           groups: testers
#           file: app/build/outputs/apk/debug/app-debug.apk
name: Flutter

on:  #events (push and pull_request)
  push: 
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:   #here we specify the jobs - We could have multiple jobs
  build:  #name it something meaningful 
    runs-on: ubuntu-latest   #runner: select a machine to use

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Build Gradle
        run: flutter build apk --debug
      - run: ls build/app/outputs/flutter-apk
      # - run: ls build/app/outputs/bundle/release
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}   
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: internal-testers
          file: build/app/outputs/flutter-apk/app-debug.apk  